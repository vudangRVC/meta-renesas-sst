#@TYPE: Machine
#@NAME: RZG2L-SBC-yocto machine
#@DESCRIPTION: Reference machine configuration for Renesas RZ/G2L SBC (RZPI) boards

SOC_FAMILY = "r9a07g044l"
require conf/machine/include/arm/arch-armv8-2a.inc

# Arm Base System Architecture says v8.0+ is allowed, but FEAT_CRC32 is required
DEFAULTTUNE = "armv8-2a"

MACHINE_FEATURES = "acpi alsa bluetooth efi keyboard pci qemu-usermode rtc screen usbhost vfat wifi opengles opencl hwh264dec hwh264enc"

KERNEL_IMAGETYPE = "Image"
PREFERRED_PROVIDER_virtual/kernel ?= "linux-yocto"

# Install all the kernel modules into the rootfs
MACHINE_EXTRA_RRECOMMENDS += "kernel-modules"
# Install selected pieces of firmware
MACHINE_EXTRA_RRECOMMENDS += "linux-firmware-wl12xx linux-firmware-wl18xx linux-firmware-rtl-nic"

IMAGE_FSTYPES ?= "wic"
WKS_FILE ?= "genericarm64.wks.in"

EFI_PROVIDER ?= "${@bb.utils.contains("DISTRO_FEATURES", "systemd", "systemd-boot", "grub-efi", d)}"

# Try to bring up one physical serial console, or a virtualized serial console
SERIAL_CONSOLES ?= "115200;ttySC0 115200;hvc0"

# Support board with PMIC. Default:yes.
# With this option enabled, build both bin files for PMIC board and Concrete board.
PMIC_SUPPORT ?= "1"

# flash writer
EXTRA_IMAGEDEPENDS += " flash-writer trusted-firmware-a firmware-pack"


#=====================================QEMU SUPPORT==================================================================================

# runqemu configuration to run a genericarm64 image inside a qemu-system-aarch64. You will need
# to build u-boot explicitly.
IMAGE_CLASSES += "qemuboot"
QB_SYSTEM_NAME = "qemu-system-aarch64"
# Boot the virtual machine with either an emulated Cortex-A76, or the host if using KVM
QB_MACHINE = "-machine virt"
QB_CPU = "-cpu cortex-a76"
QB_CPU_KVM = "-cpu host -machine gic-version=3"
QB_SMP = "-smp 4"
# Boot into U-Boot and let that scan the disk for the next step, don't pass any kernel or filesystem hints
QB_DEFAULT_BIOS = "u-boot.bin"
QB_DEFAULT_KERNEL = "none"
QB_DEFAULT_FSTYPE = "wic"
QB_FSINFO = "wic:no-kernel-in-fs"
# Mount the wic rootfs as a virtio block device
QB_ROOTFS_OPT = "-drive id=root,file=@ROOTFS@,if=none,format=raw -device virtio-blk-pci,drive=root"
# Virtio graphics
QB_GRAPHICS = "-device virtio-gpu-pci"
# Virtio serial consoles
QB_SERIAL_OPT = "-device virtio-serial-pci -chardev null,id=virtcon -device virtconsole,chardev=virtcon"
QB_TCPSERIAL_OPT = "-device virtio-serial-pci -chardev socket,id=virtcon,port=@PORT@,host=127.0.0.1,nodelay=on -device virtconsole,chardev=virtcon"
# Virtio networking
QB_TAP_OPT = "-netdev tap,id=net0,ifname=@TAP@,script=no,downscript=no"


# u-boot
UBOOT_CONFIG ??= "rzg2l-sbc"
UBOOT_CONFIG[rzg2l-sbc] = "rzpi_defconfig"
